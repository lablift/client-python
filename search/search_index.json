{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introdu\u00e7\u00e3o O cliente Python da LabLift foi desenvolvido para facilitar a integra\u00e7\u00e3o com nossos produtos. Nesta p\u00e1gina, encontrar\u00e1 instru\u00e7\u00f5es b\u00e1sicas de uso. Pr\u00e9-requisitos Python 3.8+ Instala\u00e7\u00e3o pip3 install lablift_client Interfaces implementadas BioFeatureAI","title":"Introdu\u00e7\u00e3o"},{"location":"#introducao","text":"O cliente Python da LabLift foi desenvolvido para facilitar a integra\u00e7\u00e3o com nossos produtos. Nesta p\u00e1gina, encontrar\u00e1 instru\u00e7\u00f5es b\u00e1sicas de uso.","title":"Introdu\u00e7\u00e3o"},{"location":"#pre-requisitos","text":"Python 3.8+","title":"Pr\u00e9-requisitos"},{"location":"#instalacao","text":"pip3 install lablift_client","title":"Instala\u00e7\u00e3o"},{"location":"#interfaces-implementadas","text":"BioFeatureAI","title":"Interfaces implementadas"},{"location":"biofeatureai/","text":"BioFeatureAI O LabLift BioFeature AI \u00e9 uma solu\u00e7\u00e3o de intelig\u00eancia artificial que extrai fatores de risco de sa\u00fade a partir de foto de rosto. Com esta solu\u00e7\u00e3o, nossos clientes conseguem ser mais eficientes na gest\u00e3o preventiva de sa\u00fade. A interface Python do BioFeature AI prov\u00ea padroniza\u00e7\u00e3o para integra\u00e7\u00e3o com outros sistemas, aumentando a produtividade e reduzindo bugs durante a implanta\u00e7\u00e3o e manuten\u00e7\u00e3o do produto. Autentica\u00e7\u00e3o Para se autenticar e ter acesso aos nossos produtos \u00e9 necess\u00e1rio gerar um token de acesso. Trata-se de uma string com validade limitada, obtida fornecendo seus dados de cadastro (usu\u00e1rio e senha). Caso voc\u00ea n\u00e3o possua um cadastro, contate o administrador da conta LabLift da sua empresa. A fun\u00e7\u00e3o generate_token \u00e9 respons\u00e1vel por gerar os tokens diretamente no cliente. Ela pode receber como argumentos seu usu\u00e1rio e senha (par\u00e2metros em formato string username e password ), caso contr\u00e1rio eles ser\u00e3o solicitados na execu\u00e7\u00e3o. O exemplo abaixo mostra como utilizar a fun\u00e7\u00e3o. Requisi\u00e7\u00e3o Requisi\u00e7\u00e3o utilizando imagem coletada internamente Com o token em m\u00e3os, \u00e9 poss\u00edvel instanciar tanto o cliente quanto o pr\u00f3prio Biofeature e utilizar o m\u00e9todo call , que recebe o argumento img ( string obrigat\u00f3rio), que \u00e9 o path at\u00e9 a imagem que se deseja submeter para predi\u00e7\u00e3o, e, opcionalmente , o argumento string cpf , correspondente ao Cadastro de Pessoa F\u00edsica, para identifica\u00e7\u00e3o pessoal. Esse m\u00e9todo se comunica com nosso modelo de intelig\u00eancia artificial e retorna o resultado da predi\u00e7\u00e3o como dict dentro de alguns segundos. Um exemplo de c\u00f3digo que realiza autentica\u00e7\u00e3o, instancia as classes necess\u00e1rias e realiza uma chamada s\u00edncrona para obter a predi\u00e7\u00e3o de uma imagem qualquer pode ser encontrado abaixo. O resultado mostrado em tela ap\u00f3s a execu\u00e7\u00e3o desse c\u00f3digo cont\u00e9m o resultado da predi\u00e7\u00e3o como um dicion\u00e1rio Python. Voc\u00ea tamb\u00e9m pode realizar requisi\u00e7\u00f5es em lote utilizando o m\u00e9todo .multiple_calls() , que recebe como argumento uma lista de dicion\u00e1rios. Cada dicion\u00e1rio nesta lista representa uma \u00fanica imagem, e precisa conter obrigatoriamente o atributo img ( path at\u00e9 a imagem) e opcionalmente o atributo cpf . O c\u00f3digo abaixo exemplifica o envio de imagens em lote. Gerar links para coleta de imagem na plataforma da LabLift Caso sua empresa n\u00e3o possua funcionalidade de coleta de foto de rosto nos seus aplicativos, voc\u00ea pode utilizar a plataforma de coleta de imagem da LabLift. Para coletar a imagem de uma pessoa, voc\u00ea gerar\u00e1 um link \u00fanico e enviar\u00e1 para a pessoa. Ao acessar o link, ela seguir\u00e1 as intru\u00e7\u00f5es de coleta pelo pr\u00f3prio celular. Posteriormente, o resultado da predi\u00e7\u00e3o ficar\u00e1 dispon\u00edvel para que voc\u00ea consulte. Para gerar um \u00fanico link , utilize o m\u00e9todo .generate_link() , que recebe o argumento cpf ( string obrigat\u00f3rio) e name ( string opcional). Um exemplo de uso do m\u00e9todo pode ser encontrado abaixo: Para gerar v\u00e1rios links em lote , utilize o m\u00e9todo .generate_multiple_links() , que recebe como argumento uma lista de dicion\u00e1rios. Cada dicion\u00e1rio representa uma pessoa, precisa conter o atributo cpf ( string ) e pode opcionalmente receber o atributo name ( string ). O retorno ser\u00e1 uma lista de links. Os links retornados respeitam a ordem de envio ao m\u00e9todo .generate_multiple_links() , isto \u00e9, o primeiro link corresponde ao primeiro CPF informado, e assim sucessivamente. O c\u00f3digo abaixo apresenta um exemplo de implementa\u00e7\u00e3o de gera\u00e7\u00e3o de links em lote. Resultado Uma resposta t\u00edpica do BioFeature AI cont\u00e9m os seguintes campos: age : Idade aparente da pessoa na foto, em anos. Geralmente este valor \u00e9 pr\u00f3ximo \u00e0 idade cronol\u00f3gica, por\u00e9m fatores como envelhecimento precoce da pele podem produzir diferen\u00e7as significativas. age_margin_error : Margem de erro da idade inferida. bmi : \u00cdndice de Massa Corporal inferido, em kg/m\u00b2. bmi_class : Classifica\u00e7\u00e3o do \u00cdndice de Massa Corporal inferido para popula\u00e7\u00e3o ocidental, conforme tabela abaixo: Classe IMC Faixa de IMC (kg/m\u00b2) underweight < 18.5 normal 18.5 <= IMC < 25 overweight 25 <= IMC < 30 obese >= 30 cpf : O mesmo valor do campo cpf , caso tenha sido enviado, ou None . Este campo confirma a atribui\u00e7\u00e3o do documento \u00e0 imagem. ethnicity : Prov\u00e1vel etnia da pessoa na foto. ethnicity_probability : Probabilidade atribu\u00edda pelo modelo com rela\u00e7\u00e3o \u00e0 etnia inferida. face : String base64 contendo o rosto detectado na foto. gender : G\u00eanero inferido. M para masculino e F para feminino. gender_probability : Probabilidade atribu\u00edda pelo modelo com rela\u00e7\u00e3o ao g\u00eanero inferido. id : C\u00f3digo identificador da imagem na LabLift. prevalent_emotion : Emo\u00e7\u00e3o prevalente esbo\u00e7ada pelo rosto na foto. Esta informa\u00e7\u00e3o deriva dos processos de valida\u00e7\u00e3o da imagem. prevalent_emotion_probability : Probabilidade atribu\u00edda pelo modelo com rela\u00e7\u00e3o \u00e0 emo\u00e7\u00e3o inferida. responsible : Username que solicitou a avalia\u00e7\u00e3o da imagem. roll : Rolagem do rosto (uma das medidas de posicionamento avaliadas). Esta informa\u00e7\u00e3o deriva dos processos de valida\u00e7\u00e3o da imagem. submitted_image_name : Nome do arquivo da imagem salva no servidor da LabLift. skin_lesion_score : Score de Manchas Faciais. Quanto maior, pior. Veja o campo skin_lesion_score_interpretation para mais informa\u00e7\u00f5es. skin_lesion_score_interpretation : Classifica\u00e7\u00e3o de comprometimento da pele por manchas faciais, de acordo com o Score de Manchas Faciais. As classes s\u00e3o, em ordem crescente de comprometimento: low , medium-low , medium-high , high . time_taken : Tempo de processamento, em segundos. wearing_eyeglasses : Indica se foi detectado o uso de \u00f3culos durante a coleta ou an\u00e1lise da foto de rosto. wearing_eyeglasses_probability : Probabilidade atribu\u00edda pelo modelo com rela\u00e7\u00e3o ao uso de \u00f3culos. yaw : Guinada do rosto (uma das medidas de posicionamento avaliadas). Esta informa\u00e7\u00e3o deriva dos processos de valida\u00e7\u00e3o da imagem. Mensagens de erro Quando o BioFeature AI retorna um status_code diferente de OK, o campo error da resposta frequentemente cont\u00e9m informa\u00e7\u00f5es mais detalhadas sobre a causa do erro. Geralmente, as causas de erro est\u00e3o relacionadas \u00e0 valida\u00e7\u00e3o da imagem. As imagens enviadas s\u00e3o validadas quanto \u00e0 sua qualidade e o posicionamento da pessoa antes de serem analisadas pelos modelos. Esta valida\u00e7\u00e3o busca garantir que as infer\u00eancias pelos modelos ocorram no maior n\u00edvel de confiabilidade poss\u00edvel. Os principais erros na etapa de valida\u00e7\u00e3o s\u00e3o: unable to read file as image : O arquivo recebido n\u00e3o \u00e9 suportado pela solu\u00e7\u00e3o. Envie imagens JPEG ou PNG. unable to detect frontal face on image : Este erro indica que a solu\u00e7\u00e3o n\u00e3o conseguiu localizar um rosto completo na imagem. Poss\u00edveis causas para isso incluem: n\u00e3o h\u00e1 um rosto na foto; a propor\u00e7\u00e3o entre o rosto da pessoa e o tamanho da foto \u00e9 muito pequena; rosto parcialmente oculto; baixa qualidade da imagem. unacceptable pose : Este erro ocorre quando \u00e9 detectada inclina\u00e7\u00e3o do rosto acima da toler\u00e2ncia da solu\u00e7\u00e3o, ou quando a pessoa aparenta emo\u00e7\u00e3o prevalente n\u00e3o-neutra (ex: a pessoa est\u00e1 sorrindo). unable to apply model to image : Este erro indica que houve uma falha durante a etapa de aplica\u00e7\u00e3o dos modelos. Tente enviar a imagem novamente. Caso o erro persista entre em contato com nosso suporte e informe este erro. unable to process image : Este erro indica que houve uma falha inesperada durante o pr\u00e9-processamento da imagem. Tente enviar a imagem novamente. Caso o erro persista entre em contato com nosso suporte e informe este erro. Nota: Imagens n\u00e3o aceitas na etapa de valida\u00e7\u00e3o n\u00e3o s\u00e3o analisadas pelos modelos, por isso os campos gerados pelos modelos n\u00e3o estar\u00e3o presentes. Api REST O BiofeatureAI tamb\u00e9m pode ser utilizado a partir de uma API REST. Voc\u00ea pode acessar a documenta\u00e7\u00e3o da API REST clicando aqui .","title":"BioFeatureAI"},{"location":"biofeatureai/#biofeatureai","text":"O LabLift BioFeature AI \u00e9 uma solu\u00e7\u00e3o de intelig\u00eancia artificial que extrai fatores de risco de sa\u00fade a partir de foto de rosto. Com esta solu\u00e7\u00e3o, nossos clientes conseguem ser mais eficientes na gest\u00e3o preventiva de sa\u00fade. A interface Python do BioFeature AI prov\u00ea padroniza\u00e7\u00e3o para integra\u00e7\u00e3o com outros sistemas, aumentando a produtividade e reduzindo bugs durante a implanta\u00e7\u00e3o e manuten\u00e7\u00e3o do produto.","title":"BioFeatureAI"},{"location":"biofeatureai/#autenticacao","text":"Para se autenticar e ter acesso aos nossos produtos \u00e9 necess\u00e1rio gerar um token de acesso. Trata-se de uma string com validade limitada, obtida fornecendo seus dados de cadastro (usu\u00e1rio e senha). Caso voc\u00ea n\u00e3o possua um cadastro, contate o administrador da conta LabLift da sua empresa. A fun\u00e7\u00e3o generate_token \u00e9 respons\u00e1vel por gerar os tokens diretamente no cliente. Ela pode receber como argumentos seu usu\u00e1rio e senha (par\u00e2metros em formato string username e password ), caso contr\u00e1rio eles ser\u00e3o solicitados na execu\u00e7\u00e3o. O exemplo abaixo mostra como utilizar a fun\u00e7\u00e3o.","title":"Autentica\u00e7\u00e3o"},{"location":"biofeatureai/#requisicao","text":"","title":"Requisi\u00e7\u00e3o"},{"location":"biofeatureai/#requisicao-utilizando-imagem-coletada-internamente","text":"Com o token em m\u00e3os, \u00e9 poss\u00edvel instanciar tanto o cliente quanto o pr\u00f3prio Biofeature e utilizar o m\u00e9todo call , que recebe o argumento img ( string obrigat\u00f3rio), que \u00e9 o path at\u00e9 a imagem que se deseja submeter para predi\u00e7\u00e3o, e, opcionalmente , o argumento string cpf , correspondente ao Cadastro de Pessoa F\u00edsica, para identifica\u00e7\u00e3o pessoal. Esse m\u00e9todo se comunica com nosso modelo de intelig\u00eancia artificial e retorna o resultado da predi\u00e7\u00e3o como dict dentro de alguns segundos. Um exemplo de c\u00f3digo que realiza autentica\u00e7\u00e3o, instancia as classes necess\u00e1rias e realiza uma chamada s\u00edncrona para obter a predi\u00e7\u00e3o de uma imagem qualquer pode ser encontrado abaixo. O resultado mostrado em tela ap\u00f3s a execu\u00e7\u00e3o desse c\u00f3digo cont\u00e9m o resultado da predi\u00e7\u00e3o como um dicion\u00e1rio Python. Voc\u00ea tamb\u00e9m pode realizar requisi\u00e7\u00f5es em lote utilizando o m\u00e9todo .multiple_calls() , que recebe como argumento uma lista de dicion\u00e1rios. Cada dicion\u00e1rio nesta lista representa uma \u00fanica imagem, e precisa conter obrigatoriamente o atributo img ( path at\u00e9 a imagem) e opcionalmente o atributo cpf . O c\u00f3digo abaixo exemplifica o envio de imagens em lote.","title":"Requisi\u00e7\u00e3o utilizando imagem coletada internamente"},{"location":"biofeatureai/#gerar-links-para-coleta-de-imagem-na-plataforma-da-lablift","text":"Caso sua empresa n\u00e3o possua funcionalidade de coleta de foto de rosto nos seus aplicativos, voc\u00ea pode utilizar a plataforma de coleta de imagem da LabLift. Para coletar a imagem de uma pessoa, voc\u00ea gerar\u00e1 um link \u00fanico e enviar\u00e1 para a pessoa. Ao acessar o link, ela seguir\u00e1 as intru\u00e7\u00f5es de coleta pelo pr\u00f3prio celular. Posteriormente, o resultado da predi\u00e7\u00e3o ficar\u00e1 dispon\u00edvel para que voc\u00ea consulte. Para gerar um \u00fanico link , utilize o m\u00e9todo .generate_link() , que recebe o argumento cpf ( string obrigat\u00f3rio) e name ( string opcional). Um exemplo de uso do m\u00e9todo pode ser encontrado abaixo: Para gerar v\u00e1rios links em lote , utilize o m\u00e9todo .generate_multiple_links() , que recebe como argumento uma lista de dicion\u00e1rios. Cada dicion\u00e1rio representa uma pessoa, precisa conter o atributo cpf ( string ) e pode opcionalmente receber o atributo name ( string ). O retorno ser\u00e1 uma lista de links. Os links retornados respeitam a ordem de envio ao m\u00e9todo .generate_multiple_links() , isto \u00e9, o primeiro link corresponde ao primeiro CPF informado, e assim sucessivamente. O c\u00f3digo abaixo apresenta um exemplo de implementa\u00e7\u00e3o de gera\u00e7\u00e3o de links em lote.","title":"Gerar links para coleta de imagem na plataforma da LabLift"},{"location":"biofeatureai/#resultado","text":"Uma resposta t\u00edpica do BioFeature AI cont\u00e9m os seguintes campos: age : Idade aparente da pessoa na foto, em anos. Geralmente este valor \u00e9 pr\u00f3ximo \u00e0 idade cronol\u00f3gica, por\u00e9m fatores como envelhecimento precoce da pele podem produzir diferen\u00e7as significativas. age_margin_error : Margem de erro da idade inferida. bmi : \u00cdndice de Massa Corporal inferido, em kg/m\u00b2. bmi_class : Classifica\u00e7\u00e3o do \u00cdndice de Massa Corporal inferido para popula\u00e7\u00e3o ocidental, conforme tabela abaixo: Classe IMC Faixa de IMC (kg/m\u00b2) underweight < 18.5 normal 18.5 <= IMC < 25 overweight 25 <= IMC < 30 obese >= 30 cpf : O mesmo valor do campo cpf , caso tenha sido enviado, ou None . Este campo confirma a atribui\u00e7\u00e3o do documento \u00e0 imagem. ethnicity : Prov\u00e1vel etnia da pessoa na foto. ethnicity_probability : Probabilidade atribu\u00edda pelo modelo com rela\u00e7\u00e3o \u00e0 etnia inferida. face : String base64 contendo o rosto detectado na foto. gender : G\u00eanero inferido. M para masculino e F para feminino. gender_probability : Probabilidade atribu\u00edda pelo modelo com rela\u00e7\u00e3o ao g\u00eanero inferido. id : C\u00f3digo identificador da imagem na LabLift. prevalent_emotion : Emo\u00e7\u00e3o prevalente esbo\u00e7ada pelo rosto na foto. Esta informa\u00e7\u00e3o deriva dos processos de valida\u00e7\u00e3o da imagem. prevalent_emotion_probability : Probabilidade atribu\u00edda pelo modelo com rela\u00e7\u00e3o \u00e0 emo\u00e7\u00e3o inferida. responsible : Username que solicitou a avalia\u00e7\u00e3o da imagem. roll : Rolagem do rosto (uma das medidas de posicionamento avaliadas). Esta informa\u00e7\u00e3o deriva dos processos de valida\u00e7\u00e3o da imagem. submitted_image_name : Nome do arquivo da imagem salva no servidor da LabLift. skin_lesion_score : Score de Manchas Faciais. Quanto maior, pior. Veja o campo skin_lesion_score_interpretation para mais informa\u00e7\u00f5es. skin_lesion_score_interpretation : Classifica\u00e7\u00e3o de comprometimento da pele por manchas faciais, de acordo com o Score de Manchas Faciais. As classes s\u00e3o, em ordem crescente de comprometimento: low , medium-low , medium-high , high . time_taken : Tempo de processamento, em segundos. wearing_eyeglasses : Indica se foi detectado o uso de \u00f3culos durante a coleta ou an\u00e1lise da foto de rosto. wearing_eyeglasses_probability : Probabilidade atribu\u00edda pelo modelo com rela\u00e7\u00e3o ao uso de \u00f3culos. yaw : Guinada do rosto (uma das medidas de posicionamento avaliadas). Esta informa\u00e7\u00e3o deriva dos processos de valida\u00e7\u00e3o da imagem.","title":"Resultado"},{"location":"biofeatureai/#mensagens-de-erro","text":"Quando o BioFeature AI retorna um status_code diferente de OK, o campo error da resposta frequentemente cont\u00e9m informa\u00e7\u00f5es mais detalhadas sobre a causa do erro. Geralmente, as causas de erro est\u00e3o relacionadas \u00e0 valida\u00e7\u00e3o da imagem. As imagens enviadas s\u00e3o validadas quanto \u00e0 sua qualidade e o posicionamento da pessoa antes de serem analisadas pelos modelos. Esta valida\u00e7\u00e3o busca garantir que as infer\u00eancias pelos modelos ocorram no maior n\u00edvel de confiabilidade poss\u00edvel. Os principais erros na etapa de valida\u00e7\u00e3o s\u00e3o: unable to read file as image : O arquivo recebido n\u00e3o \u00e9 suportado pela solu\u00e7\u00e3o. Envie imagens JPEG ou PNG. unable to detect frontal face on image : Este erro indica que a solu\u00e7\u00e3o n\u00e3o conseguiu localizar um rosto completo na imagem. Poss\u00edveis causas para isso incluem: n\u00e3o h\u00e1 um rosto na foto; a propor\u00e7\u00e3o entre o rosto da pessoa e o tamanho da foto \u00e9 muito pequena; rosto parcialmente oculto; baixa qualidade da imagem. unacceptable pose : Este erro ocorre quando \u00e9 detectada inclina\u00e7\u00e3o do rosto acima da toler\u00e2ncia da solu\u00e7\u00e3o, ou quando a pessoa aparenta emo\u00e7\u00e3o prevalente n\u00e3o-neutra (ex: a pessoa est\u00e1 sorrindo). unable to apply model to image : Este erro indica que houve uma falha durante a etapa de aplica\u00e7\u00e3o dos modelos. Tente enviar a imagem novamente. Caso o erro persista entre em contato com nosso suporte e informe este erro. unable to process image : Este erro indica que houve uma falha inesperada durante o pr\u00e9-processamento da imagem. Tente enviar a imagem novamente. Caso o erro persista entre em contato com nosso suporte e informe este erro. Nota: Imagens n\u00e3o aceitas na etapa de valida\u00e7\u00e3o n\u00e3o s\u00e3o analisadas pelos modelos, por isso os campos gerados pelos modelos n\u00e3o estar\u00e3o presentes.","title":"Mensagens de erro"},{"location":"biofeatureai/#api-rest","text":"O BiofeatureAI tamb\u00e9m pode ser utilizado a partir de uma API REST. Voc\u00ea pode acessar a documenta\u00e7\u00e3o da API REST clicando aqui .","title":"Api REST"}]}